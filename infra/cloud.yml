Description: 'Run after IAM. Creates VPC, Subnets, Internet, and Routing for public ELB over private Fargate'

Mappings:
  SubnetConfig:
    VPC:
      CIDR: '10.0.0.0/16'
    PublicSubnet1:
      CIDR: '10.0.0.0/24'
    PublicSubnet2:
      CIDR: '10.0.1.0/24'
    PrivateSubnet1:
      CIDR: '10.0.2.0/24'
    PrivateSubnet2:
      CIDR: '10.0.3.0/24'


Resources:

  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !FindInMap ['SubnetConfig', 'VPC', 'CIDR']
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags: 
        - Key: "Name"
          Value: "VPC-4-GenFargate"

  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !FindInMap ['SubnetConfig', 'PublicSubnet1', 'CIDR']
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: "Name"
          Value: "Pub1-4-GenFargate"
  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !FindInMap ['SubnetConfig', 'PublicSubnet2', 'CIDR']
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: "Name"
          Value: "Pub2-4-GenFargate"
          
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !GetAtt PublicSubnet1.AvailabilityZone
      CidrBlock: !FindInMap ['SubnetConfig', 'PrivateSubnet1', 'CIDR']
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value: "Priv1-4-GenFargate"
  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !GetAtt PublicSubnet2.AvailabilityZone
      CidrBlock: !FindInMap ['SubnetConfig', 'PrivateSubnet2', 'CIDR']
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: "Name"
          Value: "Priv2-4-GenFargate"
  
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags: 
        - Key: "Name"
          Value: "IGW-4-GenFargate"
  VPCGatewayAttach:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  
  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags: 
        - Key: "Name"
          Value: "RT-4-GenFargate"
  RouteTableAssocPublicSubnet1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref RouteTable
  RouteTableAssocPublicSubnet2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref RouteTable

  InternetRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttach
    Properties:
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: '0.0.0.0/0'

  PublicLoadBalancerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for ALB in public subnet to connect to apps in private subnet'
      GroupName: 'PublicLoadBalancerSecurityGroup-4-GenFargate'
      VpcId: !Ref 'VPC'
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
      Tags:
        - Key: "Name"
          Value: "SG-4-ALB-GenFargate"
  PrivateContainersSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'      
    Properties:
      GroupDescription: 'Security group for Fargate in private subnet'
      GroupName: 'PrivateContainersSecurityGroup-4-GenFargate'
      VpcId: !Ref 'VPC'
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref 'PublicLoadBalancerSecurityGroup'
          IpProtocol: -1
      Tags: 
        - Key: "Name"
          Value: "SG-4-ECS-GenFargate"


Outputs:
  VPC:
    Description: 'VPC'
    Value: !Ref VPC
    Export:
      Name: 'VPC'
  
  PublicSubnet1:
    Description: 'Public Subnet 1 on AZ1'
    Value: !Ref PublicSubnet1
    Export:
      Name: 'PublicSubnet1'
  PublicSubnet2:
    Description: 'Public Subnet 2 on AZ2'
    Value: !Ref PublicSubnet2
    Export:
      Name: 'PublicSubnet2'
  
  PrivateSubnet1:
    Description: 'Private Subnet 1 on AZ1'
    Value: !Ref PrivateSubnet1
    Export:
      Name: 'PrivateSubnet1'
  PrivateSubnet2:
    Description: 'Private Subnet 2 on AZ2'
    Value: !Ref PrivateSubnet2
    Export:
      Name: 'PrivateSubnet2'
  
  RouteTable:
    Description: 'publish Route Table for NATGW'
    Value: !Ref RouteTable
    Export:
      Name: RouteTable
  
  PublicLoadBalancerSecurityGroup:
    Description: 'Security group for ALB in public subnet to connect to apps in private subnet'
    Value: !Ref PublicLoadBalancerSecurityGroup
    Export:
      Name: 'PublicLoadBalancerSecurityGroup'    
  PrivateContainersSecurityGroup:
    Description: 'Security group for Fargate in private subnet'
    Value: !Ref PrivateContainersSecurityGroup
    Export:
      Name: 'PrivateContainersSecurityGroup'
